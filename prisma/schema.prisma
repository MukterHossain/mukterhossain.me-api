// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String?
  role       Role       @default(USER)
  phone      String?
  image    String?
  status     UserStatus @default(ACTIVE)
  isVerified Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  blogs       Blog[]
  resumes Resume[]
  refreshTokens RefreshToken[]
}

model Blog {
  id         Int      @id @default(autoincrement())
  title      String
  slug      String @unique
  summary String
  content    String
  thumbnail  String?
  views      Int      @default(0)
  published Boolean @default(false)
  authorId   Int
  author     User     @relation(fields: [authorId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}


model Project {
  id         Int      @id @default(autoincrement())
  title      String
  slug      String @unique
  description String?
  features    String[]
  thumbnail  String?
  liveUrl String?
  repoUrl String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Resume {
  id         Int      @id @default(autoincrement())
  user     User?     @relation(fields: [userId], references: [id])
  userId Int?
  data Json
  createdAt  DateTime @default(now())
}

model RefreshToken {
  id Int  @id @default(autoincrement())
  token String @unique
  user User  @relation(fields: [userId], references: [id])
  userId Int
  expireAt DateTime
  createdAt DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}

